@model IEnumerable<Lab1DBwithASP.Models.ApartmentModel>

@{
    ViewData["Title"] = "View";
    int year = (int)Model.First().Year;
}
<p>
    <h2><label style="font-size:x-large">APPARTMENT SHEET FOR </label> @Html.DisplayFor(model => model.First().Year)</h2>

    <a class="btn btn-outline-primary" href="/Apartment/Index/?year=@{year--; @Html.DisplayFor(number => year)}" role="button" style="float:left"> < </a>
    <pre style="float:left"> </pre>
    <form asp-action="Index">
        <div>
            <input name="year" class="form-control" placeholder="Search Year" style="max-width:7%; min-width:7%; float:left" />
        </div>
    </form>
    <pre style="float:left"> </pre>
    <a class="btn btn-outline-primary" href="/Apartment/Index/?year=@{year+=2; @Html.DisplayFor(number => year)}" role="button" style="float:left"> > </a>
    <pre style="float:left"> </pre>
    <a class="btn btn-primary" href="/Apartment/CreateForm/" role="button">Add new apartment</a>
    <br /><br />

    
</p>


<table class="table table-borderless">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First)
            </th>
            <th>
                Jan
            </th>
            <th>
                Feb
            </th>
            <th>
                Mar
            </th>
            <th>
                Apr
            </th>
            <th>
                May
            </th>
            <th>
                June
            </th>
            <th>
                July
            </th>
            <th>
                Aug
            </th>
            <th>
                Sept
            </th>
            <th>
                Oct
            </th>
            <th>
                Nov
            </th>
            <th>
                Dec
            </th>
            <th>
                Remaining payment
            </th>
        </tr>
    </thead>
    <tbody>

        @{
            var collection = from element in Model
                             orderby element.MonthId ascending
                             group element by element.Id;
            decimal remaining = 0;
            int month = 0;
            int counter = 1;
        }

@foreach (var item in collection) {
        if (item.ElementAt(0).Id == 0) break;
            counter = 1;
            <tr>
            <td>
                <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        @Html.DisplayFor(modelItem => item.ElementAt(0).Id)
                </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                        <li><a class="dropdown-item" asp-action="UpdateForm" asp-route-id="@item.ElementAt(0).Id" asp-route-year="@item.ElementAt(0).Year">Update</a></li>
                        <li><a class="dropdown-item" asp-action="DeleteEntry" asp-route-id="@item.ElementAt(0).Id" asp-route-year="@item.ElementAt(0).Year">Delete Last Entry</a></li>
                        <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.ElementAt(0).Id">Delete</a></li>
                    </ul>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ElementAt(0).First)
            </td>
                @foreach(var subitem in item)
                {

                    @if (subitem != null)
                        if (counter != subitem.MonthId)
                            while (counter != subitem.MonthId)
                            {
                                <td></td>
                                counter++;
                            }

                    <td>
                        <a class="btn btn-outline-primary" href="/Apartment/Details/?id=@subitem.Id&year=@subitem.Year&month=@subitem.MonthId" role="button">
                        @Html.DisplayFor(modelItem => subitem.Additional)  <br>
                        @Html.DisplayFor(modelItem => subitem.Paid)        <br>
                        @Html.DisplayFor(modelItem => subitem.Left) </a>
                        @{remaining = subitem.Left; month = subitem.MonthId;}
                        @{
                            counter++;
                        }
                    </td>
                }
            <td>
                @if(month == 12)
                @Html.DisplayFor(modelItem => remaining)
            </td>
        </tr>
}

    </tbody>
</table>

